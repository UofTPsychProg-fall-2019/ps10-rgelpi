# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI, color = gender)) + geom_boxplot(aes(fill=gender)) + theme_classic() + scale_fill_manual(values = alpha(c("red3", "turquoise"), .3))
Q1
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI, color = gender)) +
geom_boxplot(aes(fill=gender)) + theme_classic() +
scale_fill_manual(values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual(values = c("red3", "turquoise"))
Q1
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI, color = gender)) +
geom_boxplot(aes(fill=gender)) + theme_classic() +
scale_fill_manual(values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual(values = c("red3", "turquoise")) +
xlab("Amount of exercise") +
scale_x_discrete(values = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week"))
Q1
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI, color = gender)) +
geom_boxplot(aes(fill=gender)) + theme_classic() +
scale_fill_manual(values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual(values = c("red3", "turquoise")) +
xlab("Amount of exercise") +
scale_x_discrete(breaks = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week"))
Q1
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI, color = gender)) +
geom_boxplot(aes(fill=gender)) + theme_classic() +
scale_fill_manual(values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual(values = c("red3", "turquoise")) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week"))
Q1
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI, color = gender)) +
geom_boxplot(aes(fill=gender)) + theme_classic() +
scale_fill_manual(values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual(labels = c("Female", "Male"), values = c("red3", "turquoise")) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week")) +
Q1
ggsave('figures/Q1.pdf',units='in',width=4,height=5)
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI, color = gender)) +
geom_boxplot(aes(fill=gender)) + theme_classic() +
scale_fill_manual(values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual(labels = c("Female", "Male"), values = c("red3", "turquoise")) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week")) +
Q1
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI, color = gender)) +
geom_boxplot(aes(fill=gender)) + theme_classic() +
scale_fill_manual(values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual(labels = c("Female", "Male"), values = c("red3", "turquoise")) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week"))
Q1
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI, color = gender)) +
geom_boxplot(aes(fill=gender)) + theme_classic() +
scale_fill_manual(values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual(values = c("red3", "turquoise")) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week"))
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI, color = gender)) +
geom_boxplot(aes(fill=gender)) + theme_classic() +
scale_fill_manual(values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual(values = c("red3", "turquoise")) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week")) +
labs(fill = "Gender")
Q1
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI, color = gender)) +
geom_boxplot(aes(fill=gender)) + theme_classic() +
scale_fill_manual(values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual(values = c("red3", "turquoise")) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week")) +
labs(fill = "Gender") +
theme(legend.position = "none")
Q1
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI)) +
geom_boxplot(aes(color = gender, fill=gender)) + theme_classic() +
scale_fill_manual(values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual(labels = c("Female", "Male"), values = c("red3", "turquoise")) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week"))
Q1
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI)) +
geom_boxplot(aes(color = gender, fill=gender)) + theme_classic() +
scale_fill_manual(labels = c("Female", "Male"), values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual(labels = c("Female", "Male"), values = c("red3", "turquoise")) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week"))
Q1
# create a boxplot that visualizes BMI distributions according to exercise habits, separately for females and males
# include at least two customizations to the look of the boxplot
# check the documentation for options
Q1 <- ggplot(ipip.l, aes(exer, BMI)) +
geom_boxplot(aes(color = gender, fill=gender)) + theme_classic() +
scale_fill_manual("Gender", labels = c("Female", "Male"), values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual("Gender", labels = c("Female", "Male"), values = c("red3", "turquoise")) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week"))
Q1
ggsave('figures/Q1.pdf',units='in',width=4,height=5)
# create a scatter plot to visualize the relationship between income and BMI, coloring points according to gender
# use geom_smooth to add linear model fit lines, separately for males and females
Q2a <- ggplot(ipip,aes(x=logMedInc,y=BMI, color=gender))+
geom_point(size=.5,alpha=.4)+
geom_smooth(method='lm')
Q2a
Q2b <- ipip %>% dplyr::filter(logMedInc>10) %>% ggplot(aes(x=logMedInc,y=BMI,color=gender)) +
geom_point(size = 0.5, alpha = 0.4) +
geom_smooth(method='lm')
Q2b
Q2a
Q2b
Q3 <- ipip %>% ggplot(aes(x = exer, y = logMedInc, color = gender)) + geom_bar()
Q3
Q3 <- ipip %>% ggplot(aes(x = exer, y = logMedInc, color = gender)) + geom_col()
Q3
Q3 <- ipip %>% ggplot(aes(x = exer, y = logMedInc, color = gender)) + geom_col(position = position_dodge(0.9))
Q3
Q3 <- ipip %>% ggplot(aes(x = exer, y = logMedInc, color = gender)) + stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9))
Q3
Q3 <- ipip %>% ggplot(aes(x = exer, y = logMedInc, color = gender)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.3, position = position_dodge(0.9))
Q3
Q3 <- ipip %>% ggplot(aes(x = exer, y = logMedInc, color = gender)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.3, position = position_dodge(0.9)) +
coord_cartesian(ylim = c(10,12))
Q3
Q3 <- ipip %>% ggplot(aes(x = exer, y = logMedInc, fill = gender)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.3, position = position_dodge(0.9)) +
coord_cartesian(ylim = c(10,12))
Q3
Q3 <- ipip %>% ggplot(aes(x = exer, y = logMedInc, fill = gender)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.3, position = position_dodge(0.9)) +
coord_cartesian(ylim = c(10,12)) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week")) +
ylab("Log of median income")
Q3
Q3 <- ipip %>% ggplot(aes(x = exer, y = logMedInc, fill = gender)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.3, position = position_dodge(0.9)) +
coord_cartesian(ylim = c(10,12)) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week")) +
ylab("Log of median income") + theme_classic() +
scale_fill_manual("Gender", labels = c("Female", "Male"), values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual("Gender", labels = c("Female", "Male"), values = c("red3", "turquoise")) +
Q3
ggsave('figures/Q3.pdf',units='in',width=4,height=5)
Q3 <- ipip %>% ggplot(aes(x = exer, y = logMedInc, fill = gender)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.3, position = position_dodge(0.9)) +
coord_cartesian(ylim = c(10,12)) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week")) +
ylab("Log of median income") + theme_classic() +
scale_fill_manual("Gender", labels = c("Female", "Male"), values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual("Gender", labels = c("Female", "Male"), values = c("red3", "turquoise"))
Q3
Q3 <- ipip %>% ggplot(aes(x = exer, y = logMedInc, fill = gender)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.3, position = position_dodge(0.9)) +
coord_cartesian(ylim = c(10,12)) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week")) +
ylab("Log of median income") + theme_classic() +
scale_fill_manual("Gender", labels = c("Female", "Male"), values = c("red3", "turquoise"))
Q3
Q3 <- ipip %>% ggplot(aes(x = exer, y = logMedInc, fill = gender, color = gender)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.3, position = position_dodge(0.9)) +
coord_cartesian(ylim = c(10,12)) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week")) +
ylab("Log of median income") + theme_classic() +
scale_fill_manual("Gender", labels = c("Female", "Male"), values = alpha(c("red3", "turquoise"), .3)) +
scale_fill_manual("Gender", labels = c("Female", "Male"), values = c("red3", "turquoise"))
Q3
Q3 <- ipip %>% ggplot(aes(x = exer, y = logMedInc, fill = gender, color = gender)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.3, position = position_dodge(0.9)) +
coord_cartesian(ylim = c(10,12)) +
xlab("Amount of exercise") +
scale_x_discrete(labels = c("Rarely or never", "< 1/month", "< 1/week", "1-2/week", "3-5/week", "< 5/week")) +
ylab("Log of median income") + theme_classic() +
scale_fill_manual("Gender", labels = c("Female", "Male"), values = alpha(c("red3", "turquoise"), .3)) +
scale_colour_manual("Gender", labels = c("Female", "Male"), values = c("red3", "turquoise"))
Q3
ggsave('figures/Q3.pdf',units='in',width=4,height=5)
View(ipip)
Q4 <- ipip.l %>% ggplot(aes(trait, value, fill = gender)) + stat_summary(fun.y = mean, geom = "pointrange")
Q4
Q4 <- ipip.l %>% ggplot(aes(trait, value)) + stat_summary(fun.y = mean, geom = "pointrange")
Q4
Q4 <- ipip.l %>% ggplot(aes(trait, value)) + stat_summary(fun.y = mean, geom = "pointrange") + coord_cartesian(ylim=0,10)
Q4
Q4 <- ipip.l %>% ggplot(aes(trait, value)) + stat_summary(fun.y = mean, geom = "pointrange") + coord_cartesian(ylim=c(0,10))
Q4
Q4 <- ipip.l %>% ggplot(aes(trait, value, fill=gender, color=gender)) + stat_summary(fun.y = mean, geom = "pointrange") + coord_cartesian(ylim=c(0,10))
Q4
Q4 <- ipip.l %>% ggplot(aes(trait, value, fill=gender, color=gender)) + stat_summary(fun.y = mean, geom = "bar") + coord_cartesian(ylim=c(0,10))
Q4
Q4 <- ipip.l %>% ggplot(aes(trait, value, fill=gender, color=gender)) + stat_summary(fun.y = mean, geom = "pointrange", position = position_jitter()) + coord_cartesian(ylim=c(0,10))
Q4
Q4 <- ipip.l %>% ggplot(aes(trait, value, fill=gender, color=gender)) + stat_summary(fun.y = mean, geom = "bar", position = position_dodge()) + coord_cartesian(ylim=c(0,10))
Q4
Q4 <- ipip.l %>% factor($.trait, levels = c("O", "C", "E", "A", "N")) %>% ggplot(aes(trait, value, fill=gender, color=gender)) + stat_summary(fun.y = mean, geom = "bar", position = position_dodge()) + coord_cartesian(ylim=c(0,10))
Q4 <- ipip.l %>% factor(.$trait, levels = c("O", "C", "E", "A", "N")) %>% ggplot(aes(trait, value, fill=gender, color=gender)) + stat_summary(fun.y = mean, geom = "bar", position = position_dodge()) + coord_cartesian(ylim=c(0,10))
factor(ipip.l$trait, levels = c("O", "C", "E", "A", "N"))
ipip.l$trait %<>% factor(levels = c("O", "C", "E", "A", "N"))
Q4 <- ipip.l %>% ggplot(aes(trait, value, fill=gender, color=gender)) + stat_summary(fun.y = mean, geom = "bar", position = position_dodge()) + coord_cartesian(ylim=c(0,10))
Q4
Q4 <- ipip.l %>% ggplot(aes(trait, value, fill=gender, color=gender)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge()) +
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge()) +
coord_cartesian(ylim=c(3,7))
Q4
ipip.l$trait %<>% factor(levels = c("O", "C", "E", "A", "N"))
Q4 <- ipip.l %>% ggplot(aes(trait, value, fill=gender, color=gender)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(0.9)) +
coord_cartesian(ylim=c(3,7))
Q4
Q4 <- ipip.l %>% ggplot(aes(trait, value, fill=gender, color=gender)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(0.9)) +
coord_cartesian(ylim=c(3,5))
Q4
Q4 <- ipip.l %>% ggplot(aes(trait, value, fill=gender, color=gender)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(0.9)) +
coord_cartesian(ylim=c(3,5)) +
facet_wrap(vars(trait))
Q4
Q4 <- ipip.l %>% ggplot(aes(gender, value, fill=gender, color=gender)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(0.9)) +
coord_cartesian(ylim=c(3,5)) +
facet_wrap(vars(trait))
Q4
ipip.l$trait %<>% factor(levels = c("O", "C", "E", "A", "N"))
Q4 <- ipip.l %>% ggplot(aes(gender, value, fill=gender, color=gender)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(0.9)) +
coord_cartesian(ylim=c(3,5)) +
facet_wrap(vars(trait)) +
theme(legend.position = "none")
Q4
# use dplyr functions to calculate the mean of each personality trait for each combination of gender, BMI group
ipip.g <- ipip.l %>%
group_by(gender,BMI_cat,trait) %>% summarise(value = mean(value))
View(ipip.g)
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, gender, fill=BMI_cat)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(0.9))
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=BMI_cat)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(0.9))
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=BMI_cat)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(0.9)) +
facet_wrap(vars(gender))
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, color=BMI_cat)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(0.9)) +
facet_wrap(vars(gender))
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, color=trait)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(0.9)) +
facet_wrap(vars(gender))
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, color=trait)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9))
facet_wrap(vars(gender))
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, color=trait)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
facet_wrap(vars(gender))
Q5
Q4 <- ipip.l %>% ggplot(aes(gender, value, fill=gender, color=gender)) +
stat_summary(fun.y = mean, geom = "point", position = position_dodge(0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "pointrange", position = position_dodge(0.9)) +
coord_cartesian(ylim=c(3,5)) +
facet_wrap(vars(trait)) +
theme(legend.position = "none")
Q4
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=trait, color=trait)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
facet_wrap(vars(gender))
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=trait, color=trait)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
facet_wrap(vars(gender)) +
scale_colour_brewer(palette = 3)
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=trait)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
facet_wrap(vars(gender)) +
scale_fill_brewer(palette = 3)
Q5
Q
Q
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=trait)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
facet_wrap(vars(gender)) +
scale_fill_brewer(palette = 2)
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=trait)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
facet_wrap(vars(gender)) +
scale_fill_brewer(palette = 612)
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=trait)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
facet_wrap(vars(gender)) +
scale_fill_brewer(palette = 12)
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=trait)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
facet_wrap(vars(gender)) +
scale_fill_brewer(palette = 14)
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=trait)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
facet_wrap(vars(gender)) +
scale_fill_brewer(palette = dark2)
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=trait)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
facet_wrap(vars(gender)) +
scale_fill_brewer(palette = 'Dark2')
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=trait)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
facet_wrap(vars(gender)) +
scale_fill_brewer(palette = 'Dark')
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=trait)) +
stat_summary(fun.y = mean, geom = "bar", position = position_dodge(0.9)) +
facet_wrap(vars(gender)) +
scale_fill_brewer(palette = 'Set2')
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=trait)) +
stat_summary(fun.y = mean, geom = "line", position = position_dodge(0.9)) +
facet_wrap(vars(gender)) +
scale_fill_brewer(palette = 'Set2')
Q5
5
5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, fill=trait)) +
stat_summary(fun.y = mean, geom = "line") +
facet_wrap(vars(gender)) +
scale_fill_brewer(palette = 'Set2')
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, group=trait, color=trait)) +
stat_summary(fun.y = mean, geom = "line") +
facet_wrap(vars(gender)) +
scale_fill_brewer(palette = 'Set2')
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, group=trait, color=trait)) +
stat_summary(fun.y = mean, geom = "line") +
facet_wrap(vars(gender)) +
scale_color_brewer(palette = 'Set2')
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, group=trait, color=trait)) +
stat_summary(fun.y = mean, geom = "line", width=2) +
facet_wrap(vars(gender)) +
scale_color_brewer(palette = 'Set2')
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, group=trait, color=trait)) +
stat_summary(fun.y = mean, geom = "line", stroke=2) +
facet_wrap(vars(gender)) +
scale_color_brewer(palette = 'Set2')
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, group=trait, color=trait)) +
stat_summary(fun.y = mean, geom = "line", str=2) +
facet_wrap(vars(gender)) +
scale_color_brewer(palette = 'Set2')
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, group=trait, color=trait)) +
stat_summary(fun.y = mean, geom = "line", size = 2) +
facet_wrap(vars(gender)) +
scale_color_brewer(palette = 'Set2')
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, group=trait, color=trait)) +
stat_summary(fun.y = mean, geom = "line", size = 1) +
facet_wrap(vars(gender)) +
scale_color_brewer(palette = 'Set2')
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, group=trait, color=trait)) +
stat_summary(fun.y = mean, geom = "line", size = 1) +
facet_wrap(vars(gender)) +
scale_color_brewer(palette = 'Set2') +
scale_x_discrete("BMI category", labels = c("Underweight", "Healthy", "Overweight", "Obese"))
Q5
# plot the average value of personality trait (colored as separate lines), according to the BMI category
# facet_warp gender so that you can see these relationships separately for females and males
Q5 <- ipip.g %>% ggplot(aes(BMI_cat, value, group=trait, color=trait)) +
stat_summary(fun.y = mean, geom = "line", size = 1) +
facet_wrap(vars(gender)) +
scale_color_brewer(palette = 'Set2') +
scale_x_discrete("BMI category", labels = c("Underweight", "Healthy", "Overweight", "Obese")) +
ylab("Score on trait")
Q5
ggsave('figures/Q5.pdf',units='in',width=4,height=5)
ggsave('figures/Q2b.pdf',units='in',width=4,height=5)
ggsave('figures/Q2a.pdf',units='in',width=4,height=5)
View(Q1)
Q1
Q2a
Q2b
Q3
Q4
ggsave('figures/Q4.pdf',units='in',width=4,height=5)
